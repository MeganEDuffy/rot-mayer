# A plotting R script produced by the REVIGO server at http://revigo.irb.hr/
# If you found REVIGO useful in your work, please cite the following reference:
# Supek F et al. "REVIGO summarizes and visualizes long lists of Gene Ontology
# terms" PLoS ONE 2011. doi:10.1371/journal.pone.0021800

# --------------------------------------------------------------------------
# If you don't have the ggplot2 package installed, uncomment the following line:
#install.packages( "ggplot2" );
library( ggplot2 );

# --------------------------------------------------------------------------
# If you don't have the scales package installed, uncomment the following line:
install.packages( "scales" );
library( scales );

# --------------------------------------------------------------------------
# Here is your data from REVIGO. Scroll down for plot configuration options.

revigo.names <- c("term_ID","description","frequency_%","plot_X","plot_Y","plot_size","value","uniqueness","dispensability");
revigo.data <- rbind(c("GO:0009535","chloroplast thylakoid membrane",0.103,7.444,0.236,4.284,25.000,0.396,0.000),
c("GO:0016020","membrane",63.790,-5.108,-1.956,7.077,2.000,1.000,0.000),
c("GO:0016021","integral component of membrane",56.752,-2.003,5.383,7.027,29.000,0.960,0.044),
c("GO:0022627","cytosolic small ribosomal subunit",0.069,3.250,-5.167,4.111,4.000,0.620,0.155),
c("GO:0005793","endoplasmic reticulum-Golgi intermediate compartment",0.043,6.215,2.425,3.908,1.000,0.726,0.194),
c("GO:0005829","cytosol",1.938,3.417,1.647,5.560,2.000,0.712,0.195),
c("GO:0005737","cytoplasm",24.636,0.648,-0.966,6.664,2.000,0.719,0.214),
c("GO:0005794","Golgi apparatus",1.462,5.261,-0.798,5.438,1.000,0.563,0.258),
c("GO:0045263","proton-transporting ATP synthase complex, coupling factor F(o)",0.213,0.985,-7.474,4.600,1.000,0.612,0.279),
c("GO:0005840","ribosome",3.958,3.416,-2.638,5.870,1.000,0.624,0.427),
c("GO:0043231","intracellular membrane-bounded organelle",17.803,4.388,-1.508,6.523,1.000,0.553,0.464),
c("GO:0030126","COPI vesicle coat",0.053,5.703,-3.734,3.997,1.000,0.478,0.525),
c("GO:0005741","mitochondrial outer membrane",0.182,7.133,-2.183,4.533,1.000,0.632,0.568),
c("GO:0000139","Golgi membrane",0.723,6.362,-1.144,5.131,1.000,0.489,0.700));

one.data <- data.frame(revigo.data);
names(one.data) <- revigo.names;
one.data <- one.data [(one.data$plot_X != "null" & one.data$plot_Y != "null"), ];
one.data$plot_X <- as.numeric( as.character(one.data$plot_X) );
one.data$plot_Y <- as.numeric( as.character(one.data$plot_Y) );
one.data$plot_size <- as.numeric( as.character(one.data$plot_size) );
one.data$value <- as.numeric( as.character(one.data$value) );
one.data$frequency <- as.numeric( as.character(one.data$frequency) );
one.data$uniqueness <- as.numeric( as.character(one.data$uniqueness) );
one.data$dispensability <- as.numeric( as.character(one.data$dispensability) );
#head(one.data);


# --------------------------------------------------------------------------
# Names of the axes, sizes of the numbers and letters, names of the columns,
# etc. can be changed below

p1 <- ggplot( data = one.data );
p1 <- p1 + geom_point( aes( plot_X, plot_Y, colour = value, size = plot_size), alpha = I(0.6) ) + scale_size_area();
p1 <- p1 + scale_colour_gradientn( colours = c("blue", "green", "yellow", "red"), limits = c( min(one.data$value), 0) );
p1 <- p1 + geom_point( aes(plot_X, plot_Y, size = plot_size), shape = 21, fill = "transparent", colour = I (alpha ("black", 0.6) )) + scale_size_area();
p1 <- p1 + scale_size( range=c(5, 30)) + theme_bw(); # + scale_fill_gradientn(colours = heat_hcl(7), limits = c(-300, 0) );
ex <- one.data [ one.data$dispensability < 0.15, ];
p1 <- p1 + geom_text( data = ex, aes(plot_X, plot_Y, label = description), colour = I(alpha("black", 0.85)), size = 3 );
p1 <- p1 + labs (y = "semantic space x", x = "semantic space y");
p1 <- p1 + theme(legend.key = element_blank()) ;
one.x_range = max(one.data$plot_X) - min(one.data$plot_X);
one.y_range = max(one.data$plot_Y) - min(one.data$plot_Y);
p1 <- p1 + xlim(min(one.data$plot_X)-one.x_range/10,max(one.data$plot_X)+one.x_range/10);
p1 <- p1 + ylim(min(one.data$plot_Y)-one.y_range/10,max(one.data$plot_Y)+one.y_range/10);


# --------------------------------------------------------------------------
# Output the plot to screen

p1;

# Uncomment the line below to also save the plot to a file.
# The file type depends on the extension (default=pdf).

# ggsave("/path_to_your_file/revigo-plot.pdf");

